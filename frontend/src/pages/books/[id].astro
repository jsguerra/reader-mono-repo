---
import Layout from "@layout/Layout.astro";
import Grid from "@components/Grid/Grid";
import Figure from "@components/figure/Figure";
import ScrollBtn from "@components/ScrollBtn/ScrollBtn";
import type { Book, Tag } from "@common/common";
import { siteURL, serverURL } from "@common/common";

interface ApiResponse {
  book: Book;
}

const { id } = Astro.params;
const bookResp = await fetch(`${serverURL}/books/${id}`);
const { book } = (await bookResp.json()) as ApiResponse;
const pages = book.pages?.split(", ");
---

<Layout>
  <div class="container container-variant">
    <h1>{book.title}</h1>
    <p>Author: {book.author.name}</p>
    <p>Number of pages: {pages?.length}</p>
    <div class="tag-container">
      {
        book.tags.map((tag: Tag) => (
          <a class="btn tag" href={`${siteURL}/tags/${tag.id}`}>
            {tag.name}
          </a>
        ))
      }
    </div>
  </div>
  <Grid toggle={true} client:load>
    {
      pages && pages.map((page) => { 
        const letterDirectory = book.author.name.charAt(0).toLowerCase();

        return (
        <Figure
          imageUrl={`${serverURL}/books/${letterDirectory}/${book.author.slug}/${book.slug}/${page}`}
          title={page}
        />
      )})
    }
  </Grid>
  <ScrollBtn client:load />
</Layout>
